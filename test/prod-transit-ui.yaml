apiVersion: apps/v1
kind: Deployment
metadata:
  name: transit-prod-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transit-prod-ui
  template: 
    metadata:
      labels:
        app: transit-prod-ui
    spec:
      containers:
      - name: transit-prod-ui
        image: POD_IMAGE
        resources:
          requests:
            cpu: "50m"
        envFrom:
        - configMapRef:
            name: transit-prod-ui-config
        - secretRef:
            name: transit-prod-ui-secrets
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: transit-prod-ui-service
  labels:
    name: transit-prod-ui-service
  namespace: default
spec:
  type: NodePort
  ports:
  - protocol: TCP
    name: api-http
    port: 80
    targetPort: 80
  selector:
    app: transit-prod-ui
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: transit-prod-ui-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "128m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
spec:
  rules:
  - host: cityradar.app.opentsr.com
    http:
      paths:
      - path: /
        backend:
          serviceName: transit-prod-ui-service
          servicePort: api-http
  - host: cityradar.ro
    http:
      paths:
      - path: /
        backend:
          serviceName: transit-prod-ui-service
          servicePort: api-http
  - host: www.cityradar.ro
    http:
      paths:
      - path: /
        backend:
          serviceName: transit-prod-ui-service
          servicePort: api-http
  tls:
  - hosts:
    - cityradar.app.opentsr.com
    - cityradar.ro
    - www.cityradar.ro
    secretName: letsencrypt-secret-prod
